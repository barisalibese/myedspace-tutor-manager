<?php

namespace Tests\Feature;

use App\Models\Tutor;
use App\Services\TutorService;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Tests\TestCase;

class TutorRateChangeTest extends TestCase
{
    use DatabaseTransactions;

    private TutorService $tutorService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->tutorService = new TutorService;
    }

    /**
     * A basic test example.
     */
    public function test_filament_bulk_rate_increase_update_action_success(): void
    {
        $tutors = Tutor::orderByDesc('hourly_rate')->limit(2)->get();
        $oldTutors = $tutors->map(fn ($tutor) => clone $tutor);

        $this->tutorService->updateHourlyRates($tutors, 50, 'decrease');

        $oldTutors->map(function ($tutor) use ($tutors) {
            $freshTutor = $tutors->find($tutor->id);
            $this->assertDatabaseHas('tutors', [
                'id' => $tutor->id, 'hourly_rate' => number_format($tutor->hourly_rate * 0.5, 2),
            ]);

            $this->assertDatabaseHas('tutor_rate_changes', [
                'tutor_id' => $tutor->id, 'old_hourly_rate' => $tutor->hourly_rate, 'new_hourly_rate' => $freshTutor->hourly_rate,
            ]);
        });
    }

    /**
     * @throws \Exception
     */
    public function test_filament_bulk_rate_decrease_update_action_success(): void
    {
        $tutors = Tutor::orderByDesc('hourly_rate')->limit(2)->get();
        $oldTutors = $tutors->map(fn ($tutor) => clone $tutor);

        $this->tutorService->updateHourlyRates($tutors, 50, 'increase');

        $oldTutors->map(function ($tutor) use ($tutors) {
            $freshTutor = $tutors->find($tutor->id);

            $this->assertDatabaseHas('tutors', [
                'id' => $tutor->id, 'hourly_rate' => number_format($tutor->hourly_rate * 1.5, 2),
            ]);

            $this->assertDatabaseHas('tutor_rate_changes', [
                'tutor_id' => $tutor->id, 'old_hourly_rate' => $tutor->hourly_rate, 'new_hourly_rate' => $freshTutor->hourly_rate,
            ]);
        });
    }
}
